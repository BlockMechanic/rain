# Copyright (c) 2013-2016 The Rain Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

bin_PROGRAMS += qt/rain-qt
EXTRA_LIBRARIES += qt/librainqt.a

# rain qt core #
QT_TS = \
  qt/locale/rain_af.ts \
  qt/locale/rain_af_ZA.ts \
  qt/locale/rain_ar.ts \
  qt/locale/rain_be_BY.ts \
  qt/locale/rain_bg_BG.ts \
  qt/locale/rain_bg.ts \
  qt/locale/rain_ca_ES.ts \
  qt/locale/rain_ca.ts \
  qt/locale/rain_ca@valencia.ts \
  qt/locale/rain_cs.ts \
  qt/locale/rain_cy.ts \
  qt/locale/rain_da.ts \
  qt/locale/rain_de.ts \
  qt/locale/rain_el_GR.ts \
  qt/locale/rain_el.ts \
  qt/locale/rain_en_GB.ts \
  qt/locale/rain_en.ts \
  qt/locale/rain_eo.ts \
  qt/locale/rain_es_AR.ts \
  qt/locale/rain_es_CL.ts \
  qt/locale/rain_es_CO.ts \
  qt/locale/rain_es_DO.ts \
  qt/locale/rain_es_ES.ts \
  qt/locale/rain_es_MX.ts \
  qt/locale/rain_es.ts \
  qt/locale/rain_es_UY.ts \
  qt/locale/rain_es_VE.ts \
  qt/locale/rain_et_EE.ts \
  qt/locale/rain_et.ts \
  qt/locale/rain_eu_ES.ts \
  qt/locale/rain_fa_IR.ts \
  qt/locale/rain_fa.ts \
  qt/locale/rain_fi.ts \
  qt/locale/rain_fr_CA.ts \
  qt/locale/rain_fr_FR.ts \
  qt/locale/rain_fr.ts \
  qt/locale/rain_gl.ts \
  qt/locale/rain_he.ts \
  qt/locale/rain_hi_IN.ts \
  qt/locale/rain_hr.ts \
  qt/locale/rain_hu.ts \
  qt/locale/rain_id_ID.ts \
  qt/locale/rain_it_IT.ts \
  qt/locale/rain_it.ts \
  qt/locale/rain_ja.ts \
  qt/locale/rain_ka.ts \
  qt/locale/rain_kk_KZ.ts \
  qt/locale/rain_ko_KR.ts \
  qt/locale/rain_ku_IQ.ts \
  qt/locale/rain_ky.ts \
  qt/locale/rain_la.ts \
  qt/locale/rain_lt.ts \
  qt/locale/rain_lv_LV.ts \
  qt/locale/rain_mk_MK.ts \
  qt/locale/rain_mn.ts \
  qt/locale/rain_ms_MY.ts \
  qt/locale/rain_nb.ts \
  qt/locale/rain_ne.ts \
  qt/locale/rain_nl.ts \
  qt/locale/rain_pam.ts \
  qt/locale/rain_pl.ts \
  qt/locale/rain_pt_BR.ts \
  qt/locale/rain_pt_PT.ts \
  qt/locale/rain_ro_RO.ts \
  qt/locale/rain_ro.ts \
  qt/locale/rain_ru_RU.ts \
  qt/locale/rain_ru.ts \
  qt/locale/rain_sk.ts \
  qt/locale/rain_sl_SI.ts \
  qt/locale/rain_sq.ts \
  qt/locale/rain_sr@latin.ts \
  qt/locale/rain_sr.ts \
  qt/locale/rain_sv.ts \
  qt/locale/rain_ta.ts \
  qt/locale/rain_th_TH.ts \
  qt/locale/rain_tr_TR.ts \
  qt/locale/rain_tr.ts \
  qt/locale/rain_uk.ts \
  qt/locale/rain_ur_PK.ts \
  qt/locale/rain_uz@Cyrl.ts \
  qt/locale/rain_vi.ts \
  qt/locale/rain_vi_VN.ts \
  qt/locale/rain_zh_CN.ts \
  qt/locale/rain_zh_HK.ts \
  qt/locale/rain_zh.ts \
  qt/locale/rain_zh_TW.ts

QT_FORMS_UI =

QT_MOC_CPP = \
  qt/moc_addresstablemodel.cpp \
  qt/moc_assetfilterproxy.cpp \
  qt/moc_assettablemodel.cpp \
  qt/moc_bantablemodel.cpp \
  qt/moc_rain.cpp \
  qt/moc_rainaddressvalidator.cpp \
  qt/moc_raingui.cpp \
  qt/moc_rainunits.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coldstakingmodel.cpp \
  qt/moc_coincontrolmodel.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_masternodelist.cpp \
  qt/moc_messagemodel.cpp \
  qt/moc_notificator.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_peertablemodel.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_qrimagewidget.cpp \
  qt/moc_recentrequeststablemodel.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_walletcontroller.cpp \
  qt/moc_walletmodel.cpp 

RAIN_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm \
  qt/macos_appnap.mm

QT_MOC = qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_rain.cpp
QT_QRC = qt/rain.qrc
QT_QRC_LOCALE_CPP = qt/qrc_rain_locale.cpp
QT_QRC_LOCALE = qt/rain_locale.qrc

RAIN_QT_H = \
  qt/addressfilterproxymodel.h \
  qt/addresstablemodel.h \
  qt/assetfilterproxy.h \
  qt/assetrecord.h \
  qt/assettablemodel.h \
  qt/bantablemodel.h \
  qt/clientmodel.h \
  qt/rain.h \
  qt/rainaddressvalidator.h \
  qt/raingui.h \
  qt/rainunits.h \
  qt/coincontrolmodel.h \
  qt/coincontrolrecord.h \
  qt/coldstakingmodel.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/masternodelist.h \
  qt/messagemodel.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/optionsmodel.h \
  qt/paymentserver.h \
  qt/peertablemodel.h \
  qt/platformstyle.h \
  qt/qrimagewidget.h \
  qt/recentrequeststablemodel.h \
  qt/transactiondesc.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/walletcontroller.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/rpcconsole.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/about.png \
  qt/res/icons/about_qt.png \
  qt/res/icons/rain.ico \
  qt/res/icons/rain_testnet.ico \
  qt/res/icons/rain.png \
  qt/res/icons/chevron.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/configure.png \
  qt/res/icons/connect0.png \
  qt/res/icons/connect1.png \
  qt/res/icons/connect2.png \
  qt/res/icons/connect3.png \
  qt/res/icons/connect4.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/eye.png \
  qt/res/icons/eye_minus.png \
  qt/res/icons/eye_plus.png \
  qt/res/icons/filesave.png \
  qt/res/icons/fontbigger.png \
  qt/res/icons/fontsmaller.png \
  qt/res/icons/hd_disabled.png \
  qt/res/icons/hd_enabled.png \
  qt/res/icons/history.png \
  qt/res/icons/info.png \
  qt/res/icons/key.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/network_disabled.png \
  qt/res/icons/open.png \
  qt/res/icons/overview.png \
  qt/res/icons/proxy.png \
  qt/res/icons/quit.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/send.png \
  qt/res/icons/spv_disabled.png \
  qt/res/icons/spv_enabled.png \
  qt/res/icons/synced.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_abandoned.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/warning.png \
  qt/res/icons/verify.png \
  qt/res/icons/staking_on.png \
  qt/res/icons/staking_off.png \
  qt/res/icons/lock_staking.png \
  qt/res/icons/encrypt.png \
  qt/res/icons/exchange.png \
  qt/res/icons/chat.png \
  qt/res/icons/messages.png \
  qt/res/icons/home.png

RAIN_QT_BASE_CPP = \
  qt/bantablemodel.cpp \
  qt/clientmodel.cpp \
  qt/rain.cpp \
  qt/rainaddressvalidator.cpp \
  qt/raingui.cpp \
  qt/rainunits.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/messagemodel.cpp \
  qt/networkstyle.cpp \
  qt/notificator.cpp \
  qt/optionsmodel.cpp \
  qt/peertablemodel.cpp \
  qt/platformstyle.cpp \
  qt/rpcconsole.cpp

RAIN_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp

RAIN_QT_WALLET_CPP = \
  qt/addressfilterproxymodel.cpp \
  qt/addresstablemodel.cpp \
  qt/assetfilterproxy.cpp \
  qt/assettablemodel.cpp \
  qt/coincontrolmodel.cpp \
  qt/coldstakingmodel.cpp \
  qt/masternodelist.cpp \
  qt/paymentserver.cpp \
  qt/qrimagewidget.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/transactiondesc.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/walletcontroller.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp

RAIN_QT_CPP = $(RAIN_QT_BASE_CPP)
if TARGET_WINDOWS
RAIN_QT_CPP += $(RAIN_QT_WINDOWS_CPP)
endif
if ENABLE_WALLET
RAIN_QT_CPP += $(RAIN_QT_WALLET_CPP)
endif # ENABLE_WALLET

RES_IMAGES =

RES_MOVIES = $(wildcard $(srcdir)/qt/res/movies/spinner-*.png)

RES_QML = $(wildcard $(srcdir)/qt/qml/*.qml) \
  $(wildcard $(srcdir)/qt/qml/contacts/*.qml) \
  $(wildcard $(srcdir)/qt/qml/messages/*.qml) \
  $(wildcard $(srcdir)/qt/qml/charts/*.qml)

RAIN_RC = qt/res/rain-qt-res.rc

RAIN_QT_INCLUDES = -DQT_NO_KEYWORDS

qt_librainqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(RAIN_INCLUDES) $(RAIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS) $(CHARTS_CFLAGS)
qt_librainqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_librainqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)

qt_librainqt_a_SOURCES = $(RAIN_QT_CPP) $(RAIN_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)
if TARGET_DARWIN
  qt_librainqt_a_SOURCES += $(RAIN_MM)
endif

nodist_qt_librainqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_librainqt_a_OBJECTS) $(qt_rain_qt_OBJECTS) : | $(QT_MOC)

# rain-qt binary #
qt_rain_qt_CPPFLAGS = $(AM_CPPFLAGS) $(RAIN_INCLUDES) $(RAIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QR_CFLAGS)  $(CHARTS_CFLAGS)
qt_rain_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

qt_rain_qt_SOURCES = qt/main.cpp
if TARGET_WINDOWS
  qt_rain_qt_SOURCES += $(RAIN_RC)
endif
qt_rain_qt_LDADD = qt/librainqt.a $(LIBRAIN_SERVER)
if ENABLE_WALLET
qt_rain_qt_LDADD += $(LIBRAIN_UTIL) $(LIBRAIN_WALLET)
endif
if ENABLE_ZMQ
qt_rain_qt_LDADD += $(LIBRAIN_ZMQ) $(ZMQ_LIBS)
endif
qt_rain_qt_LDADD += $(LIBRAIN_CLI) $(LIBRAIN_COMMON) $(LIBRAIN_UTIL) $(LIBRAIN_CONSENSUS) $(LIBRAIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(BLS_LIBS)
qt_rain_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_rain_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX

#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

$(srcdir)/qt/rainstrings.cpp: $(librain_server_a_SOURCES) $(librain_wallet_a_SOURCES) $(librain_common_a_SOURCES) $(librain_zmq_a_SOURCES) $(librain_consensus_a_SOURCES) $(librain_util_a_SOURCES)
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME="$(PACKAGE_NAME)" COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" COPYRIGHT_HOLDERS_SUBSTITUTION="$(COPYRIGHT_HOLDERS_SUBSTITUTION)" $(PYTHON) ../share/qt/extract_strings_qt.py $^

translate: $(srcdir)/qt/rainstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(RAIN_QT_BASE_CPP) qt/rain.cpp $(RAIN_QT_WINDOWS_CPP) $(RAIN_QT_WALLET_CPP) $(RAIN_QT_H) $(RAIN_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/rain_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name rain_locale $(@D)/temp_$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(RES_QML)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name rain $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

CLEAN_QT = $(nodist_qt_librainqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_rain_locale.qrc

CLEANFILES += $(CLEAN_QT)

rain_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_librainqt_a_OBJECTS) $(qt_rain_qt_OBJECTS) qt/rain-qt$(EXEEXT) $(LIBRAINQT)

rain_qt : qt/rain-qt$(EXEEXT)

APK_LIB_DIR = qt/android/libs/$(ANDROID_ARCH)
QT_BASE_PATH = $(shell find ../depends/sources/ -maxdepth 1 -type f -regex ".*qtbase.*\.tar.xz")
QT_BASE_TLD = $(shell tar tf $(QT_BASE_PATH) --exclude='*/*')

rain_qt_apk: FORCE
	mkdir -p $(APK_LIB_DIR)
	cp $(dir $(CC))../sysroot/usr/lib/$(host_alias)/libc++_shared.so $(APK_LIB_DIR)
	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/jar/src --strip-components=5
	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/java/src --strip-components=5
	tar xf $(QT_BASE_PATH) -C qt/android/res/ $(QT_BASE_TLD)src/android/java/res --strip-components=5
	cp qt/rain-qt $(APK_LIB_DIR)/librain-qt.so
	cd qt/android && gradle wrapper
	cd qt/android && ./gradlew build

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
